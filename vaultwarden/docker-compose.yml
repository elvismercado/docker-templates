# https://github.com/dani-garcia/vaultwarden
# Vaultwarden

# This setup is for running in my Unraid server

x-base-env: &base-env
  PUID: ${UID}
  PGID: ${GID}
  UID: ${UID}
  GID: ${GID}
  UMASK: ${UMASK:-022}
  TZ: ${TZ:-Europe/London}

# https://github.com/dani-garcia/vaultwarden/wiki/SMTP-Configuration
x-smtp: &smtp
  SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
  SMTP_FROM: ${SMTP_FROM}
  SMTP_FROM_NAME: ${SMTP_FROM_NAME:-Vaultwarden}
  SMTP_USERNAME: ${SMTP_USERNAME}
  SMTP_PASSWORD: ${SMTP_PASSWORD}
  SMTP_SECURITY: ${SMTP_SECURITY:-starttls}
  SMTP_PORT: ${SMTP_PORT:-587}

# https://github.com/dani-garcia/vaultwarden/wiki/Enabling-Mobile-Client-push-notification
x-push: &push
  PUSH_ENABLED: true
  PUSH_INSTALLATION_ID: ${PUSH_INSTALLATION_ID}
  PUSH_INSTALLATION_KEY: ${PUSH_INSTALLATION_KEY}
  PUSH_RELAY_URI: https://push.bitwarden.eu
  PUSH_IDENTITY_URI: https://identity.bitwarden.eu

name: ${CONTAINER_NAME:-vaultwarden}

networks:
  mynetwork:
    name: ${CONTAINER_NAME:-vaultwarden}
    ipam:
      config:
        - subnet: ${SUBNET:-10.42.0.0/24}

services:
  vaultwarden:
    image: vaultwarden/server:${IMAGE_TAG:-latest}
    container_name: ${CONTAINER_NAME:-vaultwarden}
    hostname: ${CONTAINER_NAME:-vaultwarden}
    restart: always
    networks:
      mynetwork:
        ipv4_address: ${IP_ADDRESS:-10.42.0.10}
    volumes:
      - ${VOLUMES_BASE:-/tmp}/${CONTAINER_NAME:-vaultwarden}/vw-data:/data
    ports:
      - ${HTTP_PORT:-11001}:80
    environment:
      <<: [*base-env, *smtp, *push]

      ## Enable websocket notifications
      ENABLE_WEBSOCKET: true

      ## Domain settings
      ## The domain must match the address from where you access the server
      ## It's recommended to configure this value, otherwise certain functionality might not work,
      ## like attachment downloads, email links and U2F.
      ## For U2F to work, the server must use HTTPS, you can use Let's Encrypt for free certs
      ## To use HTTPS, the recommended way is to put Vaultwarden behind a reverse proxy
      ## Details:
      ## - https://github.com/dani-garcia/vaultwarden/wiki/Enabling-HTTPS
      ## - https://github.com/dani-garcia/vaultwarden/wiki/Proxy-examples
      ## For development
      # DOMAIN=http://localhost
      ## For public server
      # DOMAIN=https://vw.domain.tld
      ## For public server (URL with port number)
      # DOMAIN=https://vw.domain.tld:8443
      ## For public server (URL with path)
      # DOMAIN=https://domain.tld/vw
      DOMAIN: ${DOMAIN}

      ## Controls whether users are allowed to create Bitwarden Sends.
      ## This setting applies globally to all users.
      ## To control this on a per-org basis instead, use the "Disable Send" org policy.
      SENDS_ALLOWED: true

      ## HIBP Api Key
      ## HaveIBeenPwned API Key, request it here: https://haveibeenpwned.com/API/Key
      HIBP_API_KEY: ${HIBP_API_KEY}

      ORG_ATTACHMENT_LIMIT: 97280 # KB - Cloudflare has a 100MB stream limit - setting this to 95MB
      USER_ATTACHMENT_LIMIT: 97280 # KB - Cloudflare has a 100MB stream limit - setting this to 95MB
      USER_SEND_LIMIT: 97280 # KB - Cloudflare has a 100MB stream limit - setting this to 95MB
      
      ## Number of days to wait before auto-deleting a trashed item.
      ## If unset (the default), trashed items are not auto-deleted.
      ## This setting applies globally, so make sure to inform all users of any changes to this setting.
      TRASH_AUTO_DELETE_DAYS: 30

      ## Controls if new users can register
      SIGNUPS_ALLOWED: ${SIGNUPS_ALLOWED:-false} # set to true if its first time setting up bitwarden
      
      ## Controls if new users need to verify their email address upon registration
      ## On new client versions, this will require the user to verify their email at signup time.
      ## On older clients, it will require the user to verify their email before they can log in.
      ## The welcome email will include a verification link, and login attempts will periodically
      ## trigger another verification email to be sent.
      SIGNUPS_VERIFY: true

      ## Allows org admins to invite users, even when signups are disabled
      INVITATIONS_ALLOWED: false
      ## Name shown in the invitation emails that don't come from a specific organization
      INVITATION_ORG_NAME: ${INVITATION_ORG_NAME:-Vaultwarden}

      ## Number of server-side passwords hashing iterations for the password hash.
      ## The default for new users. If changed, it will be updated during login for existing users.
      PASSWORD_ITERATIONS: 1200000

      ## Enable experimental feature flags for clients.
      ## This is a comma-separated list of flags, e.g. "flag1,flag2,flag3".
      ## Note that clients cache the /api/config endpoint for about 1 hour and it could take some time before they are enabled or disabled!
      ##
      ## The following flags are available:
      ## - "inline-menu-positioning-improvements": Enable the use of inline menu password generator and identity suggestions in the browser extension.
      ## - "inline-menu-totp": Enable the use of inline menu TOTP codes in the browser extension.
      ## - "ssh-agent": Enable SSH agent support on Desktop. (Needs desktop >=2024.12.0)
      ## - "ssh-key-vault-item": Enable the creation and use of SSH key vault items. (Needs clients >=2024.12.0)
      ## - "export-attachments": Enable support for exporting attachments (Clients >=2025.4.0)
      ## - "anon-addy-self-host-alias": Enable configuring self-hosted Anon Addy alias generator. (Needs Android >=2025.3.0, iOS >=2025.4.0)
      ## - "simple-login-self-host-alias": Enable configuring self-hosted Simple Login alias generator. (Needs Android >=2025.3.0, iOS >=2025.4.0)
      ## - "mutual-tls": Enable the use of mutual TLS on Android (Client >= 2025.2.0)
      EXPERIMENTAL_CLIENT_FEATURE_FLAGS: inline-menu-positioning-improvements,inline-menu-totp,fido2-vault-credentials,export-attachments,anon-addy-self-host-alias,simple-login-self-host-alias

      ## Require new device emails. When a user logs in an email is required to be sent.
      ## If sending the email fails the login attempt will fail!!
      REQUIRE_DEVICE_EMAIL: true

      ## Enable extended logging, which shows timestamps and targets in the logs
      EXTENDED_LOGGING: false

      ## Token for the admin interface, preferably an Argon2 PCH string
      ## Vaultwarden has a built-in generator by calling `vaultwarden hash`
      ## For details see: https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page#secure-the-admin_token
      ## If not set, the admin panel is disabled
      ## New Argon2 PHC string
      ## Note that for some environments, like docker-compose you need to escape all the dollar signs `$` with an extra dollar sign like `$$`
      ## Also, use single quotes (') instead of double quotes (") to enclose the string when needed
      # ADMIN_TOKEN='$argon2id$v=19$m=65540,t=3,p=4$MmeKRnGK5RW5mJS7h3TOL89GrpLPXJPAtTK8FTqj9HM$DqsstvoSAETl9YhnsXbf43WeaUwJC6JhViIvuPoig78'
      ## Old plain text string (Will generate warnings in favor of Argon2)
      # ADMIN_TOKEN=Vy2VyYTTsKPv8W5aEOWUbB/Bt3DEKePbHmI4m9VcemUMS2rEviDowNAFqYi1xjmp
      ADMIN_TOKEN: ${ADMIN_TOKEN}
    labels:
      - "com.service=${CONTAINER_NAME:-vaultwarden}"
# TODO: Backup
# https://github.com/jackyaz/vaultwarden_dropbox_backup
# https://github.com/Bruceforce/vaultwarden-backup
