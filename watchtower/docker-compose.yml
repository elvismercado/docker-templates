# Watchtower
# https://containrrr.dev/watchtower

# This is a template

x-base-env: &base-env
  TZ: ${TZ:-Europe/London}
  UID: ${UID}
  GID: ${GID}

x-notifications: &notifications
  WATCHTOWER_NOTIFICATIONS: email
  WATCHTOWER_NOTIFICATIONS_HOSTNAME: ${WATCHTOWER_NOTIFICATIONS_HOSTNAME}
  WATCHTOWER_NOTIFICATION_EMAIL_DELAY: 2
  WATCHTOWER_NOTIFICATION_EMAIL_SERVER: ${WATCHTOWER_NOTIFICATION_EMAIL_SERVER:-smtp.gmail.com}
  WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: ${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT:-587}
  WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: ${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER}
  WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: ${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD}
  WATCHTOWER_NOTIFICATION_EMAIL_FROM: ${WATCHTOWER_NOTIFICATION_EMAIL_FROM}
  WATCHTOWER_NOTIFICATION_EMAIL_TO: ${WATCHTOWER_NOTIFICATION_EMAIL_TO}

name: ${CONTAINER_NAME:-watchtower}

networks:
  default:
    name: ${CONTAINER_NAME:-watchtower}
    ipam:
      config:
        - subnet: ${SUBNET:-10.42.0.0/24}

services:
  watchtower:
    image: containrrr/watchtower
    container_name: ${CONTAINER_NAME:-watchtower}
    hostname: ${CONTAINER_NAME:-watchtower}
    restart: always
    networks:
      - default
    volumes:
      - ${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock
    environment:
      <<: [*base-env, *notifications]
      WATCHTOWER_CLEANUP: ${WATCHTOWER_CLEANUP:-true} # Removes old images after updating.
      WATCHTOWER_LABEL_ENABLE: ${WATCHTOWER_LABEL_ENABLE:-true} # Monitor and update containers that have a com.centurylinklabs.watchtower.enable label set to true.
      WATCHTOWER_DISABLE_CONTAINERS: ${WATCHTOWER_DISABLE_CONTAINERS} # Monitor and update containers whose names are not in a given set of names.
      WATCHTOWER_MONITOR_ONLY: ${WATCHTOWER_MONITOR_ONLY:-false} # Will only monitor for new images, send notifications and invoke the pre-check/post-check hooks, but will not update the containers.
      WATCHTOWER_NO_STARTUP_MESSAGE: ${WATCHTOWER_NO_STARTUP_MESSAGE:-true} # Do not send a message after watchtower started. Otherwise there will be an info-level notification.
      WATCHTOWER_SCHEDULE: ${WATCHTOWER_SCHEDULE:--}
      WATCHTOWER_ROLLING_RESTART: ${WATCHTOWER_ROLLING_RESTART:-true} # Restart one image at time instead of stopping and starting all at once.
      WATCHTOWER_TIMEOUT: ${WATCHTOWER_TIMEOUT:-10} # Timeout before the container is forcefully stopped.
    labels:
      - "com.service=${CONTAINER_NAME:-watchtower}"